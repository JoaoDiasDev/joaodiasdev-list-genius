@implements IDisposable

@if (AllState.ShowEmployee)
{
    @if (ShowAddOrUpdateEmployee)
    {
        <div class="container">
            <div class="row mt-5">
                <div class="col-lg-1 text-center">
                    <i class="bi bi-x-lg fs-3 fw-bold text-danger" style="cursor:pointer" @onclick="CloseForm"></i>
                </div>
                <div class="col-lg-6 text-center"><h2>@Title Employee</h2></div>
            </div>

            <div class="row">
                <div class="col-lg-12 mt-2 mb-5 d-flex justify-content-center">
                    <div class="hstack">
                        @if (FirstLayer)
                        {
                            <div class="@_floatingNumber1 text-center">1</div>
                            <div class="@_floatingDiv1 format-border"></div>
                            <div class="@_floatingNumber2 text-center">2</div>
                            <div class="@_floatingDiv2 format-border"></div>
                        }
                        @if (SecondLayer)
                        {
                            <div class="@_floatingNumber1 text-center">1</div>
                            <div class="@_floatingDiv1 format-border"></div>
                            <div class="@_floatingNumber1 text-center">2</div>
                            <div class="@_floatingDiv1 format-border"></div>
                        }
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="container-fluid">
                        @if (FirstLayer)
                        {
                            <EditForm Enhance Model="EmployeeGroup1Dto" OnValidSubmit="Form1">
                                <DataAnnotationsValidator />
                                <div class="row">
                                    <div class="col-lg-2"></div>
                                    <div class="col-lg-4">
                                        <div class="card-title mb-5 fw-bold" style="font-family: Tahoma">Personal Information</div>
                                        <div class="card-body">
                                            <div class="form-group">
                                                <label class="form-label">Fullname</label>
                                                <InputText @bind-Value="EmployeeGroup1Dto.Name" class="form-control" />
                                                <ValidationMessage For="() => EmployeeGroup1Dto.Name" class="text-danger" />
                                            </div>
                                            <div class="form-group mt-2">
                                                <label class="form-label">Telephone</label>
                                                <InputText @bind-Value="EmployeeGroup1Dto.TelephoneNumber" class="form-control" />
                                                <ValidationMessage For="() => EmployeeGroup1Dto.TelephoneNumber" class="text-danger" />
                                            </div>
                                            <div class="form-group mt-2">
                                                <label class="form-label">Address</label>
                                                <InputText @bind-Value="EmployeeGroup1Dto.Address" class="form-control" />
                                                <ValidationMessage For="() => EmployeeGroup1Dto.Address" class="text-danger" />
                                            </div>
                                            <div class="form-control mt-2">
                                                @if (string.IsNullOrEmpty(EmployeeGroup1Dto.Photo))
                                                {
                                                    <img src="images/profile/default-profile-image.png"
                                                         width="100"
                                                         height="100" alt="Default Photo" />
                                                }
                                                else
                                                {
                                                    <img src="@EmployeeGroup1Dto.Photo"
                                                         width="100"
                                                         height="100" alt="Employee Photo" />
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 mt-2">
                                        <div class="card-title mb-5 fw-bold" style="font-family: Tahoma">Other Information</div>
                                        <div class="card-body">
                                            <div class="form-group">
                                                <label class="form-label">Civil Id</label>
                                                <InputText @bind-Value="EmployeeGroup1Dto.CivilId" class="form-control" />
                                                <ValidationMessage For="() => EmployeeGroup1Dto.CivilId" class="text-danger" />
                                            </div>
                                            <div class="form-group mt-2">
                                                <label class="form-label">File Number</label>
                                                <InputText @bind-Value="EmployeeGroup1Dto.FileNumber" class="form-control" />
                                                <ValidationMessage For="() => EmployeeGroup1Dto.FileNumber" class="text-danger" />
                                            </div>
                                            <div class="form-group mt-2">
                                                <label class="form-label @(ImageUploadMessage == "" ? "" : "text-danger")">
                                                    @(ImageUploadMessage == "" ? "Upload Image" : ImageUploadMessage)
                                                </label>
                                                <InputFile OnChange="@UploadImage" class="form-control" />
                                                <ValidationMessage For="() => EmployeeGroup1Dto.Photo" class="text-danger" />
                                            </div>
                                            <div class="form-group mt-5">
                                                <button class="btn btn-primary float-end mt-4 mb-5" type="submit">
                                                    <i class="bi bi-arrow-right"></i>
                                                    Next
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-2"></div>
                                </div>
                            </EditForm>
                        }
                        @if (SecondLayer)
                        {
                            <EditForm Enhance Model="EmployeeGroup2Dto" OnValidSubmit="Form2">
                                <DataAnnotationsValidator />
                                <div class="row">
                                    <div class="col-lg-2"></div>
                                    <div class="col-lg-4">
                                        <div class="card-title mb-5 fw-bold" style="font-family: Tahoma">Job Information</div>
                                        <div class="card-body">
                                            <div class="form-group">
                                                <label class="form-label">Job Name</label>
                                                <InputText @bind-Value="EmployeeGroup2Dto.JobName" class="form-control" />
                                                <ValidationMessage For="() => EmployeeGroup2Dto.JobName" class="text-danger" />
                                            </div>
                                            <div class="form-group mt-3">
                                                @{
                                                    var generalDepartment = GeneralDepartment.Equals("")
                                                    ? "Select General Department"
                                                    : GeneralDepartment;
                                                }
                                                <label class="form-label">Select General Department</label>
                                                <SfDropDownList TValue="string" TItem="GeneralDepartment"
                                                                Placeholder="@generalDepartment"
                                                                DataSource="GeneralDepartments">
                                                    <DropDownListFieldSettings Value="Id"
                                                                               Text="Name" />
                                                    <DropDownListEvents TValue="string" TItem="GeneralDepartment"
                                                                        ValueChange="OnGeneralDepartmentValueChange" />
                                                </SfDropDownList>
                                            </div>
                                            <div class="form-group mt-3">
                                                @{
                                                    var department = Department.Equals("")
                                                    ? "Select Department"
                                                    : Department;
                                                }
                                                <label class="form-label">Select Department</label>
                                                <SfDropDownList TValue="string" TItem="Department"
                                                                Placeholder="@department"
                                                                DataSource="Departments">
                                                    <DropDownListFieldSettings Value="Id"
                                                                               Text="Name" />
                                                    <DropDownListEvents TValue="string"
                                                                        TItem="Department"
                                                                        ValueChange="OnDepartmentValueChange" />
                                                </SfDropDownList>
                                            </div>
                                            <div class="form-group mt-3">
                                                @{
                                                    var branch = Branch.Equals("")
                                                    ? "Select Branch"
                                                    : Branch;
                                                }
                                                <label class="form-label">Select Branch</label>
                                                <SfDropDownList TValue="string" TItem="Branch"
                                                                Placeholder="@branch"
                                                                DataSource="Branches">
                                                    <DropDownListFieldSettings Value="Id"
                                                                               Text="Name" />
                                                    <DropDownListEvents TValue="string"
                                                                        TItem="Branch"
                                                                        ValueChange="OnBranchValueChange" />
                                                </SfDropDownList>
                                                <ValidationMessage For="() => EmployeeGroup2Dto.BranchId" class="text-danger" />
                                            </div>
                                            <div class="form-group mt-4 mb-5">
                                                <button class="btn btn-primary float-start" type="button" @onclick="PrevClicked">
                                                    <i class="bi bi-arrow-left"></i>
                                                    Prev
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 mt-2">
                                        <div class="card-title mb-5 fw-bold" style="font-family: Tahoma">Location Information</div>
                                        <div class="card-body">
                                            <div class="form-group">
                                                @{
                                                    var country = Country.Equals("")
                                                    ? "Select Country"
                                                    : Country;
                                                }
                                                <label class="form-label">Select Country</label>
                                                <SfDropDownList TValue="string" TItem="Country"
                                                                Placeholder="@country"
                                                                DataSource="Countries">
                                                    <DropDownListFieldSettings Value="Id"
                                                                               Text="Name" />
                                                    <DropDownListEvents TValue="string"
                                                                        TItem="Country"
                                                                        ValueChange="OnCountryValueChange" />
                                                </SfDropDownList>
                                            </div>
                                            <div class="form-group mt-3">
                                                @{
                                                    var city = City.Equals("")
                                                    ? "Select City"
                                                    : City;
                                                }
                                                <label class="form-label">Select City</label>
                                                <SfDropDownList TValue="string" TItem="City"
                                                                Placeholder="@city"
                                                                DataSource="Cities">
                                                    <DropDownListFieldSettings Value="Id"
                                                                               Text="Name" />
                                                    <DropDownListEvents TValue="string"
                                                                        TItem="City"
                                                                        ValueChange="OnCityValueChange" />
                                                </SfDropDownList>
                                            </div>
                                            <div class="form-group mt-3">
                                                @{
                                                    var town = Town.Equals("")
                                                    ? "Select Town"
                                                    : Town;
                                                }
                                                <label class="form-label">Select City</label>
                                                <SfDropDownList TValue="string" TItem="Town"
                                                                Placeholder="@town"
                                                                DataSource="Towns">
                                                    <DropDownListFieldSettings Value="Id"
                                                                               Text="Name" />
                                                    <DropDownListEvents TValue="string"
                                                                        TItem="Town"
                                                                        ValueChange="OnTownValueChange" />
                                                </SfDropDownList>
                                                <ValidationMessage For="() => EmployeeGroup2Dto.TownId" class="text-danger"></ValidationMessage>
                                            </div>
                                            <div class="form-group mt-3">
                                                <label class="form-label">Other</label>
                                                <InputTextArea @bind-Value="EmployeeGroup2Dto.Other" placeholder="Optional" class="form-control" />
                                            </div>
                                            <div class="form-group mt-4 mb-5">
                                                <button class="btn btn-success float-end" type="submit">
                                                    <i class="bi bi-save"></i>
                                                    Save
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-2"></div>
                                </div>
                            </EditForm>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
}

<style>
    .floatingDiv {
        width: 500px;
        background: #228ada;
        height: 10px;
    }

    .floatingNumber {
        border-radius: 50%;
        color: white;
        background: #1d1858;
        width: 20px;
        height: 20px;
    }

    .inactive-div {
        width: 500px;
        background: gray;
        height: 10px;
    }

    .inactive-span {
        border-radius: 50%;
        color: white;
        background: gray;
        width: 20px;
        height: 20px;
    }

    .format-border {
        border-radius: 20px;
    }

</style>

@code
{
    [Parameter] public Employee Employee { get; set; } = new();
    [Parameter] public bool ShowAddOrUpdateEmployee { get; set; }
    [Parameter] public EmployeeGrouping1Dto EmployeeGroup1Dto { get; set; } = new();
    [Parameter] public EmployeeGrouping2Dto EmployeeGroup2Dto { get; set; } = new();
    [Parameter] public List<Country> Countries { get; set; } = [];
    [Parameter] public List<City> Cities { get; set; } = [];
    [Parameter] public List<Town> Towns { get; set; } = [];
    [Parameter] public List<GeneralDepartment> GeneralDepartments { get; set; } = [];
    [Parameter] public List<Department> Departments { get; set; } = [];
    [Parameter] public List<Branch> Branches { get; set; } = [];
    [Parameter] public EventCallback NotifyParentFormCloseClicked { get; set; }
    [Parameter] public EventCallback<int> HandleCitySelectedEvent { get; set; }
    [Parameter] public EventCallback<int> HandleCountrySelectedEvent { get; set; }
    [Parameter] public EventCallback<int> HandleGeneralDepartmentSelectedEvent { get; set; }
    [Parameter] public EventCallback<int> HandleDepartmentSelectedEvent { get; set; }
    [Parameter] public EventCallback<Employee> HandleSaveEmployeeClickedEvent { get; set; }

    private string _floatingNumber1 = "floatingNumber";
    private string _floatingDiv1 = "floatingDiv";
    private string _floatingNumber2 = "inactive-span";
    private string _floatingDiv2 = "inactive-div";
    private bool FirstLayer { get; set; } = true;
    private bool SecondLayer { get; set; } = false;
    private string Title { get; set; } = "Add";
    private string GeneralDepartment { get; set; } = string.Empty;
    private string Department { get; set; } = string.Empty;
    private string Branch { get; set; } = string.Empty;
    private string Country { get; set; } = string.Empty;
    private string City { get; set; } = string.Empty;
    private string Town { get; set; } = string.Empty;

    protected override void OnInitialized()
    {
        AllState.Action += StateHasChanged;
    }

    private void ShowLayer2()
    {
        FirstLayer = false;
        SecondLayer = true;
    }

    private void PrevClicked()
    {
        FirstLayer = true;
        SecondLayer = false;
    }

    private string ImageUploadMessage { get; set; } = string.Empty;
    private async Task UploadImage(InputFileChangeEventArgs e)
    {
        if (e.File.Name.ToLower().EndsWith(".png"))
        {
            const string format = "image/png";
            var resizeImage = await e.File.RequestImageFileAsync(format, 300, 300);
            var buffer = new byte[resizeImage.Size];
            _ = await resizeImage.OpenReadStream().ReadAsync(buffer);
            var imageData = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
            ImageUploadMessage = "";
            EmployeeGroup1Dto.Photo = imageData;
        }
        else
        {
            ImageUploadMessage = "Only PNG format is allowed.";
        }
    }

    private async Task CloseForm()
    {
        ShowAddOrUpdateEmployee = false;
        await NotifyParentFormCloseClicked.InvokeAsync();
    }

    public void OnCityValueChange(ChangeEventArgs<string, City> args)
    {
        HandleCitySelectedEvent.InvokeAsync(int.Parse(args.Value));
    }

    public void OnCountryValueChange(ChangeEventArgs<string, Country> args)
    {
        HandleCountrySelectedEvent.InvokeAsync(int.Parse(args.Value));
    }

    public void OnTownValueChange(ChangeEventArgs<string, Town> args)
    {
        EmployeeGroup2Dto.TownId = int.Parse(args.Value);
    }

    public void OnGeneralDepartmentValueChange(ChangeEventArgs<string, GeneralDepartment> args)
    {
        HandleGeneralDepartmentSelectedEvent.InvokeAsync(int.Parse(args.Value));
    }

    public void OnDepartmentValueChange(ChangeEventArgs<string, Department> args)
    {
        HandleDepartmentSelectedEvent.InvokeAsync(int.Parse(args.Value));
    }

    public void OnBranchValueChange(ChangeEventArgs<string, Branch> args)
    {
        EmployeeGroup2Dto.BranchId = int.Parse(args.Value);
    }

    private bool ValidateEmployeeGroup1()
    {
        return !string.IsNullOrEmpty(EmployeeGroup1Dto.Name)
               && !string.IsNullOrEmpty(EmployeeGroup1Dto.TelephoneNumber)
               && !string.IsNullOrEmpty(EmployeeGroup1Dto.FileNumber)
               && !string.IsNullOrEmpty(EmployeeGroup1Dto.Address)
               && !string.IsNullOrEmpty(EmployeeGroup1Dto.Photo)
               && !string.IsNullOrEmpty(EmployeeGroup1Dto.CivilId);
    }

    private bool ValidateEmployeeGroup2()
    {
        return !string.IsNullOrEmpty(EmployeeGroup2Dto.JobName)
               && EmployeeGroup2Dto.TownId != 0
               && EmployeeGroup2Dto.BranchId != 0;
    }

    private void Form1()
    {
        var isValid = ValidateEmployeeGroup1();
        if (isValid)
        {
            Employee.Name = EmployeeGroup1Dto.Name;
            Employee.TelephoneNumber = EmployeeGroup1Dto.TelephoneNumber;
            Employee.Address = EmployeeGroup1Dto.Address;
            Employee.Photo = EmployeeGroup1Dto.Photo;
            Employee.CivilId = EmployeeGroup1Dto.CivilId;
            Employee.FileNumber = EmployeeGroup1Dto.FileNumber;
            ShowLayer2();
        }

    }

    private async Task Form2()
    {
        var isValid = ValidateEmployeeGroup2();
        if (isValid)
        {
            Employee.JobName = EmployeeGroup2Dto.JobName;
            Employee.TownId = EmployeeGroup2Dto.TownId;
            Employee.BranchId = EmployeeGroup2Dto.BranchId;
            Employee.Other = EmployeeGroup2Dto.Other;

            await HandleSaveEmployeeClickedEvent.InvokeAsync(Employee);
        }
    }

    public void ClearContent()
    {
        EmployeeGroup1Dto = new EmployeeGrouping1Dto();
        EmployeeGroup2Dto = new EmployeeGrouping2Dto();
        Employee = new Employee();
        StateHasChanged();
    }

    public void Dispose() => AllState.Action -= StateHasChanged;
}
